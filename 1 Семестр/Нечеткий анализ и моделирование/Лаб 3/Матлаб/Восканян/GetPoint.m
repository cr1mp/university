function result=GetPoint(X,Y,M,x,y)
% X - вектор-столбец опорных знаений 1-й переменной,
% отсортированный по возрастанию
% Y - вектор-столбец опорных знаений 2-й переменной, 
% отсортированный по возрастанию
% M – априорная матрица опорных значений, содержащая 
% все всевозможные сочетания опорных значений переменных и 
% соответствующих им выходных констант
% x,y - координаты точки, в которой производится аппроксимация

% проверка на ошибки
if (size(X,2)>1)||(size(X,1)<2)||(size(Y,2)>1)||   (size(Y,1)<2)||(size(M,2)~=3)||   (size(M,1)~=size(X,1)*size(Y,1))
    result=0;
    return
end
%подсчёт числа опорных значений
nx=size(X,1);
ny=size(Y,1);
% проверка на попадание в рассматриваемый интервал
if (x<X(1))||(x>X(nx))||(y<Y(1))||(y>Y(ny))
    result=0;
    return
end
% поиск ближайших 4-х точек
for i=1:1:(nx-1)
    if (x>=X(i))&&(x<=X(i+1))
        X1=X(i);
        X2=X(i+1);
        break
    end
end
for i=1:1:(ny-1)
    if (y>=Y(i))&&(y<=Y(i+1))
        Y1=Y(i);
        Y2=Y(i+1);
        break
    end
end
for i=1:1:nx*ny
    if (M(i,1)==X1)&&(M(i,2)==Y1)
        U11=M(i,3);
    end
    if (M(i,1)==X1)&&(M(i,2)==Y2)
        U12=M(i,3);
    end
    if (M(i,1)==X2)&&(M(i,2)==Y1)
        U21=M(i,3);
    end
    if (M(i,1)==X2)&&(M(i,2)==Y2)
        U22=M(i,3);
    end
end
% определение "высоты" точки
L1=U11+(U21-U11)*(x-X1)/(X2-X1);
L2=U11+(U12-U11)*(y-Y1)/(Y2-Y1);
L3=U12+(U22-U12)*(x-X1)/(X2-X1);
L4=U21+(U22-U21)*(y-Y1)/(Y2-Y1);
A=L2+(L4-L2)*(x-X1)/(X2-X1);
B=L1+(L3-L1)*(y-Y1)/(Y2-Y1);
result=(A+B)/2;


end

